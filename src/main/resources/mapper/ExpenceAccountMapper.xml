<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.aricSun.vsbo_oa.mapper.ExpenceAccountMapper">
  <resultMap id="BaseResultMap" type="com.github.aricSun.vsbo_oa.pojo.ExpenceAccount">
    <id column="ea_id" jdbcType="INTEGER" property="eaId" />
    <result column="cause" jdbcType="VARCHAR" property="cause" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="total_money" jdbcType="DOUBLE" property="totalMoney" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="creater_id" jdbcType="INTEGER" property="createrId" />
    <result column="next_handler_id" jdbcType="INTEGER" property="nextHandlerId" />
  </resultMap>
  <sql id="Base_Column_List">
    ea_id, cause, create_time, total_money, `status`, creater_id, next_handler_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from expence_account
    where ea_id = #{eaId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from expence_account
    where ea_id = #{eaId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="ea_id" keyProperty="eaId" parameterType="com.github.aricSun.vsbo_oa.pojo.ExpenceAccount" useGeneratedKeys="true">
    insert into expence_account (cause, create_time, total_money, 
      `status`, creater_id, next_handler_id
      )
    values (#{cause,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{totalMoney,jdbcType=DOUBLE}, 
      #{status,jdbcType=VARCHAR}, #{createrId,jdbcType=INTEGER}, #{nextHandlerId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="ea_id" keyProperty="eaId" parameterType="com.github.aricSun.vsbo_oa.pojo.ExpenceAccount" useGeneratedKeys="true">
    insert into expence_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cause != null">
        cause,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="totalMoney != null">
        total_money,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createrId != null">
        creater_id,
      </if>
      <if test="nextHandlerId != null">
        next_handler_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cause != null">
        #{cause,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalMoney != null">
        #{totalMoney,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=INTEGER},
      </if>
      <if test="nextHandlerId != null">
        #{nextHandlerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.aricSun.vsbo_oa.pojo.ExpenceAccount">
    update expence_account
    <set>
      <if test="cause != null">
        cause = #{cause,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalMoney != null">
        total_money = #{totalMoney,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        creater_id = #{createrId,jdbcType=INTEGER},
      </if>
      <if test="nextHandlerId != null">
        next_handler_id = #{nextHandlerId,jdbcType=INTEGER},
      </if>
    </set>
    where ea_id = #{eaId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.aricSun.vsbo_oa.pojo.ExpenceAccount">
    update expence_account
    set cause = #{cause,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      total_money = #{totalMoney,jdbcType=DOUBLE},
      `status` = #{status,jdbcType=VARCHAR},
      creater_id = #{createrId,jdbcType=INTEGER},
      next_handler_id = #{nextHandlerId,jdbcType=INTEGER}
    where ea_id = #{eaId,jdbcType=INTEGER}
  </update>
</mapper>